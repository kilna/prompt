#!/usr/bin/env bash

# Linux:
# Ran 53231 in 10 seconds
# Read (loop -r) 5685 in 10 seconds
# Read (slurp) 11189 in 10 seconds
# Read (slurp -r) 11107 in 10 seconds
# Captured via `` 6779 in 10 seconds
# Captured via $() 6651 in 10 seconds
# Eval captured 6088 in 10 seconds
# Evaled 51910 in 10 seconds
# Piped 4557 in 10 seconds

# GitBash Windows:
# Ran 46315 in 10 seconds
# Read (loop -r) 879 in 10 seconds
# Read (slurp) 1065 in 10 seconds
# Read (slurp -r) 1065 in 10 seconds
# Captured via `` 551 in 10 seconds
# Captured via $() 564 in 10 seconds
# Eval captured 562 in 10 seconds
# Evaled 44251 in 10 seconds
# Piped 373 in 10 seconds

# MacOS



run_time="${1:-5}"

func() {
  echo "contents!"
  echo "contents!"
  echo "contents!"
  echo "contents!"
  echo "contents!"
  echo "contents!"
  echo "contents!"
  echo "contents!"
}

func2() {
  while read -r line; do
    : ;
  done < /dev/stdin
}

start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  func >/dev/null
  count=$(( $count + 1 ))
done
echo "Ran $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  while IFS='' read -r var; do
    echo '' >/dev/null
  done < <(func)
  count=$(( $count + 1 ))
done
echo "Read (loop -r) $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  IFS='' read var < <(func)
  count=$(( $count + 1 ))
done
echo "Read (slurp) $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  IFS='' read -r var < <(func)
  count=$(( $count + 1 ))
done
echo "Read (slurp -r) $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  var="`func`"
  count=$(( $count + 1 ))
done
echo "Captured via \`\` $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  var="$(func)"
  count=$(( $count + 1 ))
done
echo "Captured via \$() $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  eval 'export var=$(func)'
  count=$(( $count + 1 ))
done
echo "Eval captured $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  eval 'func > /dev/null'
  count=$(( $count + 1 ))
done
echo "Evaled $count in $run_time seconds"


start=$SECONDS
count=0
while (( ( $SECONDS - $start ) < $run_time )); do
  func | func2
  count=$(( $count + 1 ))
done
echo "Piped $count in $run_time seconds"


